<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Information</title>
    <link rel="stylesheet" href="/TREASURER_CSS/Treasurer_studentInfo.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.0/css/all.min.css">
</head>
<body>
    <style>
.archive-modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
}

.archive-modal .modal-content {
    background-color: white;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 400px;
}

.archive-modal .form-actions {
    display: flex;
    justify-content: space-between; 
}

.archive-modal .form-actions button {
    padding: 10px 20px;
    margin: 10px;
    cursor: pointer;
}

.archive-modal .form-actions button:nth-child(1) {
    background-color: #4CAF50;
    color: white;
}

.archive-modal .form-actions button:nth-child(2) {
    background-color: #f44336; 
    color: white;
}

.notification {
    position: fixed;
    top: -100px; 
    left: 50%;
    transform: translateX(-50%);
    background-color: #f44336; 
    color: white;
    padding: 15px 20px;
    border-radius: 4px;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
    transition: top 0.5s ease; 
    z-index: 1000;
}

.notification.success {
    background-color: #4CAF50; 
}

.notification.error {
    background-color: #f44336; 
}

.notification.show {
    top: 20px; 
}

.notification.dismiss {
    top: -100px; 
}

.notification p {
    margin: 0;
    padding: 0;
    font-size: 16px;
}

.notification .close-btn {
    cursor: pointer;
    font-size: 18px;
    font-weight: bold;
    color: white;
    background: none;
    border: none;
}
.close-btn {
   margin-right: 10px;
}





    </style>
 
    
    <header>
        <div class="logo">
            <img src="/BSIT_LOGO.png" alt="Logo">
            <span class="BS">BSIT FUND COLLECTION<br><span class="IT"> MANAGEMENT SYSTEM</span></span>
        </div>
        <nav class="nav">
            <a href="/Treasurer_dashboard" class="nav-link" id="dashboardLink">DASHBOARD</a>
            <a href="/Treasurer_create_payable" class="nav-link" id="payableLink">PAYABLE</a>
            
        <div class="dropdown">
    <a href="#" class="dropbtn nav-link" id="receiveLink">RECEIVE</a>
    <span class="arrow"></span>
    <div class="dropdown-content" id="receiveDropdown">
        <a href="#">BSIT-1A</a>
        <a href="#">BSIT-1B</a>
        <a href="#">BSIT-2A</a>
        <a href="#">BSIT-2B</a>
        <a href="/Treasurer_BSIT_3A_remittance">BSIT-3A</a>
        <a href="/Treasurer_BSIT_3B_remittance">BSIT-3B</a>
        <a href="#">BSIT-4A</a>
        <a href="#">BSIT-4B</a>
          </div>
      </div>

          
      <div class="dropdown">
        <a href="#" class="dropbtn nav-link" id="remittanceLink">REMITTANCE</a>
        <span class="arrow"></span>
        <div class="dropdown-content" id="remittanceDropdown">
            <a href="#">BSIT-1A</a>
            <a href="#">BSIT-1B</a>
            <a href="#">BSIT-2A</a>
            <a href="#">BSIT-2B</a>
            <a href="/treasurer_3A_verify_remittance">BSIT-3A</a>
            <a href="/treasurer_3B_verify_remittance">BSIT-3B</a>
            <a href="#">BSIT-4A</a>
            <a href="#">BSIT-4B</a>
        </div>
    </div>
    
    <div class="dropdown">
        <a href="#" class="dropbtn nav-link" id="reportLink">REPORT</a>
        <span class="arrow"></span>
        <div class="dropdown-content" id="reportDropdown">
          <a href="#">MONTHLY REPORT</a>
          <a href="/treasurer_create_expenses">EXPENSES</a>
        </div>
      </div>
      
   <a href="/Treasurer_register_user" class="nav-link" id="registerLink">REGISTER</a>
           
   <div class="dropdown">
    <a href="#" class="dropbtn nav-link" id="userLink" onclick="toggleDropdown('userDropdown')">
      <i class="fa-solid fa-user"></i>
    </a>
    <span class="arrow" onclick="toggleDropdown('userDropdown')"></span>
    <div class="dropdown-content" id="userDropdown">
      <a href="#">MANAGE ACCOUNT</a>
      <a href="/logout">LOGOUT</a>
    </div>
  </div>
  
        </nav>
    </header>
    
    <% if (typeof message !== 'undefined') { %>
        <div class="notification <%= messageType === 'success' ? 'success' : 'error' %>" id="notification">
            <div style="display: flex;">
                <span class="close-btn" onclick="dismissNotification()">Ã—</span>
                <p><%= message %></p>
            </div>
        </div>
    <% } %>
    

<div class="container">
    <div class="info">
        <h2><%= student.userId %></h2>
        <p><%= student.firstName %> <%= student.lastName %>
            <a class="flex" onclick="openEditModal()">
                <i class="fa-solid fa-pen-to-square" style="font-size: 18px; margin-right: 6px;"></i>
            </a>
            <a onclick="openArchiveModal()">
                <i class="fa-solid fa-folder-open" style="font-size: 18px;"></i>
            </a>
      
        </p>
        
        <p><%= student.gender %></p>
        <p>BSIT - <%= student.yearLevel %> <%= student.block %></p>
    </div>


    <form id="remittance-form" name="studentId" action="/api/remittances" method="POST" onsubmit="return validateForm()">
        <input type="hidden" name="studentId" value="<%= student.userId %>">
        <input type="hidden" name="studentName" value="<%= student.firstName %> <%= student.lastName %>">
        <input type="hidden" name="studentBlock" value="<%= student.block %>">
        <input type="hidden" name="studentYearLevel" value="<%= student.yearLevel %>">
    
        <div class="scrollable-table-container">
            <table>
                <thead>
                    <tr>
                        <th style="width: 200px;">DATE</th>
                        <th>PAYABLE</th>
                        <th>INPUT AMOUNT</th>
                        <th>AMOUNT PAID</th>
                        <th>BALANCE</th>
                    </tr>
                </thead>
                <tbody>
                    <% payables.forEach(payable => { %>
                        <tr>
                            <td class="paid-date" style="width: 100px;">
                                <% 
                                    const remittance = remittances.find(rem => rem.payables === payable.payables && rem.student === `${student.firstName} ${student.lastName}`);
                                %>
                                <%= remittance ? remittance.date : '' %>
                            </td>
                            <td>
                                <%= payable.payables %>
                                <input type="hidden" name="Description_<%= payable.id %>" value="<%= payable.payables %>">
                            </td>

                     <!-----code here-->
                     <td>
                        <input type="number" 
                               name="inputtedAmount_<%= payable.id %>" 
                               class="paid-input" 
                               style="width: 100%; border: none; outline: none;"
                               onchange="updateTotals(this)" 
                               placeholder="Enter amount"
                               <%= payable.balances === 0 ? 'disabled' : '' %> >
                    </td>

                    

                     <td>
                        <span class="paid-input" style="width: 100%; display: block;">
                            <%= payable.amountPaid !== undefined ? payable.amountPaid : (remittances.find(rem => rem.payableId === payable.id)?.paid || 0) %>
                        </span>
                    </td>
              
                            
                            <td>
                                <%= payable.balances %>
                                <input type="hidden" name="balance_<%= payable.id %>" value="<%= payable.balances %>">    
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="1">TOTAL</td>
                        <td></td>
                        <td></td>
                        <td class="total-paid">
                            <%= Math.floor(payables.reduce((total, payable) => total + (payable.amountPaid || 0), 0)) %>
                        </td>
                        <td class="total-balance">
                            <%= Math.floor(payables.reduce((total, payable) => (payable.balances || 0), 0)) %>
                        </td>   
                    </tr>       
                </tfoot>
            </table>
        </div>
    
        <input type="hidden" name="date" id="remittance-date">
        <button type="submit" class="Submit" id="receive-button">RECEIVE</button>
    </form>
    </div>

    
    <div id="edit-modal" class="edit-modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h3>Edit Student Information</h3>
            <form action="/Treasurer_update_student" method="POST">
                <input type="hidden" name="studentId" value="<%= student.userId %>">
                
                <div class="userId-block-container">
                    <div class="form-group">
                        <label for="edit-user-id">User ID:</label>
                        <input type="text" id="edit-user-id" name="userId" value="<%= student.userId %>">
                    </div>
    
                    <div class="form-group">
                        <label for="edit-block">Block:</label>
                        <input type="text" id="edit-block" name="block" value="<%= student.block %>">
                    </div>
                </div>
    
                <div class="name-container">
                    <div class="name-field">
                        <label for="edit-first-name">First Name:</label>
                        <input type="text" id="edit-first-name" name="firstName" value="<%= student.firstName %>">
                    </div>
                    <div class="name-field">
                        <label for="edit-last-name">Last Name:</label>
                        <input type="text" id="edit-last-name" name="lastName" value="<%= student.lastName %>">
                    </div>
                </div>
            
                <div class="gender-yearLevel-container">
                    <div class="gender-field">
                        <label for="edit-gender">Gender:</label>
                        <select id="edit-gender" name="gender">
                            <option value="Male" <%= student.gender.toUpperCase() === 'MALE' ? 'selected' : '' %>>MALE</option>
                            <option value="Female" <%= student.gender.toUpperCase() === 'FEMALE' ? 'selected' : '' %>>FEMALE</option>
                            
                        </select>
                    </div>
    
                    <div class="yearLevel-field">
                        <label for="edit-yearLevel">Year Level:</label>
                        <select id="edit-yearLevel" name="yearLevel">
                            <option value="3" <%= student.yearLevel === '3' ? 'selected' : '' %>>3RD YEAR</option>
                            <option value="4" <%= student.yearLevel === '4' ? 'selected' : '' %>>4TH YEAR</option>
                        </select>
                    </div>
                </div>
    
                <div class="form-group">
                    <label for="edit-role">Role:</label>
                    <select id="edit-role" name="role" onchange="toggleUsernamePasswordFields()">
                        <option value="TREASURER" <%= student.role === 'TREASURER' ? 'selected' : '' %>>TREASURER</option>
                        <option value="REPRESENTATIVE" <%= student.role === 'REPRESENTATIVE' ? 'selected' : '' %>>REPRESENTATIVE</option>
                        <option value="STUDENT" <%= student.role === 'STUDENT' ? 'selected' : '' %>>STUDENT</option>
                    </select>
                </div>
                
                <div id="username-password-container" class="username-password-container" style="display: none;">
                    <div class="username-field">
                        <label for="edit-username">Username:</label>
                        <input type="text" id="edit-username" name="username" value="<%= student.userId %>" readonly>
                    </div>
                    <div class="password-field">
                        <label for="edit-password">Password:</label>
                        <input type="text" id="edit-password" name="password" readonly>
                    </div>
                </div>
                
                <div class="form-actions">
                    <button type="submit">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
    
    
    <div id="archive-modal" class="archive-modal" style="display:none;">
        <div class="modal-content">
            <span class="close" onclick="closeArchiveModal()">&times;</span>
            <h3>Are you sure you want to move this student to archive?</h3>
            <p>This action will archive the student and they will no longer be active.</p>
            <form action="/Treasurer_archieve" method="POST">
                <input type="hidden" name="studentId" value="<%= student.userId %>">
                <div class="form-actions">
                    <button type="submit">Yes, Archive</button>
                    <button type="button" onclick="closeArchiveModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
    
    <script>
    //message
    document.addEventListener("DOMContentLoaded", () => {
        const notification = document.getElementById("notification");
        if (notification) {
            setTimeout(() => {
                notification.classList.add("show");
            }, 100);

            setTimeout(() => {
                dismissNotification();
            }, 5000);
        }
    });

    function dismissNotification() {
        const notification = document.getElementById("notification");
        if (notification) {
            notification.classList.add("dismiss");
            notification.addEventListener("transitionend", () => {
                notification.remove();
            });
        }
    }



        function openEditModal() {
            const modal = document.getElementById('edit-modal');
            modal.style.display = 'flex';
        }
        
        function closeEditModal() {
            const modal = document.getElementById('edit-modal');
            modal.style.display = 'none';
        }
        
        function openArchiveModal() {
            const modal = document.getElementById('archive-modal');
            modal.style.display = 'flex';
        }
        
        function closeArchiveModal() {
            const modal = document.getElementById('archive-modal');
            modal.style.display = 'none';
        }
        
        // Optional: Store form data in localStorage if needed, similar to your previous code
        function storeFormData() {
            const formData = {
                studentId: document.querySelector('input[name="studentId"]').value,
            };
            localStorage.setItem('formData', JSON.stringify(formData));
        }
        
        
        
        
            document.getElementById('receiveLink').addEventListener('mouseover', function() {
            document.getElementById('receiveDropdown').classList.add('show');
        });
        
        document.getElementById('receiveLink').addEventListener('mouseout', function() {
            document.getElementById('receiveDropdown').classList.remove('show');
        });
        
        document.getElementById('receiveDropdown').addEventListener('mouseover', function() {
            this.classList.add('show');
        });
        
        document.getElementById('receiveDropdown').addEventListener('mouseout', function() {
            this.classList.remove('show');
        });
        
        
        
        document.getElementById('remittanceLink').addEventListener('mouseover', function() {
            document.getElementById('remittanceDropdown').classList.add('show');
        });
        
        document.getElementById('remittanceLink').addEventListener('mouseout', function() {
            document.getElementById('remittanceDropdown').classList.remove('show');
        });
        
        document.getElementById('remittanceDropdown').addEventListener('mouseover', function() {
            this.classList.add('show');
        });
        
        document.getElementById('remittanceDropdown').addEventListener('mouseout', function() {
            this.classList.remove('show');
        });
        
        
        
        function setupDropdown(linkId, dropdownId) {
            const linkElement = document.getElementById(linkId);
            const dropdownElement = document.getElementById(dropdownId);
        
            linkElement.addEventListener('mouseover', function () {
                dropdownElement.classList.add('show');
            });
        
            linkElement.addEventListener('mouseout', function () {
                dropdownElement.classList.remove('show');
            });
        
            dropdownElement.addEventListener('mouseover', function () {
                this.classList.add('show');
            });
        
            dropdownElement.addEventListener('mouseout', function () {
                this.classList.remove('show');
            });
        }
        
        setupDropdown('reportLink', 'reportDropdown');
        
        
        function toggleDropdown(dropdownId) {
            const dropdownElement = document.getElementById(dropdownId);
        
            dropdownElement.classList.toggle('show');
        }
        
        function setupDropdown(linkId, dropdownId) {
            const linkElement = document.getElementById(linkId);
            const dropdownElement = document.getElementById(dropdownId);
        
            linkElement.addEventListener('mouseover', function () {
                dropdownElement.classList.add('show');
            });
        
            linkElement.addEventListener('mouseout', function () {
                dropdownElement.classList.remove('show');
            });
        
            dropdownElement.addEventListener('mouseover', function () {
                this.classList.add('show');
            });
        
            dropdownElement.addEventListener('mouseout', function () {
                this.classList.remove('show');
            });
        }
        
        setupDropdown('userLink', 'userDropdown');
        
        
        window.addEventListener('load', function() {
            const currentPath = window.location.pathname;
            const links = document.querySelectorAll('.nav-link');
            links.forEach(link => {
                if (currentPath.includes(link.getAttribute('href'))) {
                    link.classList.add('active');
                } else {
                    link.classList.remove('active');
                }
            });
        });
        
        function toggleDropdown(dropdownId) {
            const dropdown = document.getElementById(dropdownId);
            dropdown.classList.toggle('show');
        }
        
        
        //JS for username and password
        function generateRandomPassword() {
                                const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
                                let password = '';
                                for (let i = 0; i < 4; i++) {
                                    password += characters.charAt(Math.floor(Math.random() * characters.length));
                                }
                                return password;
                            }
                        
                            function toggleUsernamePasswordFields() {
                                const role = document.getElementById('edit-role').value;
                                const usernamePasswordContainer = document.getElementById('username-password-container');
                                const passwordField = document.getElementById('edit-password');
                                const userIdField = document.getElementById('edit-user-id');
                                const usernameField = document.getElementById('edit-username');
                        
                                if (role === 'TREASURER' || role === 'REPRESENTATIVE') {
                                    usernamePasswordContainer.style.display = 'flex';
                                    usernameField.value = userIdField.value;
                                    passwordField.value = generateRandomPassword();
                                } else {
                                    usernamePasswordContainer.style.display = 'none';
                                    usernameField.value = ''; 
                                    passwordField.value = ''; 
                                }
                            }
                            window.onload = function() {
                                toggleUsernamePasswordFields();
                            };
        
        
        </script>
        

</body>
</html>
